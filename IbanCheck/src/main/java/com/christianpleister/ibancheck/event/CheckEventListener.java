package com.christianpleister.ibancheck.event;

import com.christianpleister.ibancheck.domain.CheckEvent;
import com.christianpleister.ibancheck.domain.CheckResultEvent;
import com.christianpleister.ibancheck.service.CheckResultEventService;
import com.christianpleister.ibancheck.service.IbanCheckService;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.extern.java.Log;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Component;

import java.io.IOException;

@Component
@Log
public class CheckEventListener {

    private final ObjectMapper objectMapper;
    private final IbanCheckService ibanCheckService;
    private final CheckResultEventService checkResultEventService;

    @Autowired
    public CheckEventListener(ObjectMapper objectMapper, IbanCheckService ibanCheckService, CheckResultEventService checkResultEventService) {
        this.objectMapper = objectMapper;
        this.ibanCheckService = ibanCheckService;
        this.checkResultEventService = checkResultEventService;
    }

    @KafkaListener(topics = "${kafka.checkEventTopic}", groupId = "${kafka.groupId}", containerFactory = "ibanCheckKafkaListenerFactory")
    public void listenToCheckEvents(String event) throws IOException {
        CheckEvent checkEvent = objectMapper.readValue(event, CheckEvent.class);
        log.info("Received Message: %s and URL %s".formatted(checkEvent.getFileType(), checkEvent.getUrl()));
        CheckResultEvent checkResultEvent = ibanCheckService.check(checkEvent);
        log.info("The CheckResult is: %s".formatted(checkResultEvent.getState()));
        //publish
        checkResultEventService.publish(checkResultEvent);
    }
}

